// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A price suggestion AI agent.
 *
 * - suggestPrice - A function that handles the price suggestion process.
 * - SuggestPriceInput - The input type for the suggestPrice function.
 * - SuggestPriceOutput - The return type for the suggestPrice function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestPriceInputSchema = z.object({
  make: z.string().describe('The make of the car.'),
  model: z.string().describe('The model of the car.'),
  year: z.number().describe('The year of the car.'),
  mileage: z.number().describe('The mileage of the car.'),
  condition: z
    .string()
    .describe(
      'The condition of the car (e.g., excellent, good, fair, poor).' // removed zombie descriptions from other flows
    ),
  zipCode: z.string().describe('The zip code where the car is located.'),
});
export type SuggestPriceInput = z.infer<typeof SuggestPriceInputSchema>;

const SuggestPriceOutputSchema = z.object({
  suggestedPrice: z
    .number()
    .describe('The suggested price for the car based on market analysis.'),
  reasoning: z.string().describe('The reasoning behind the suggested price.'),
});
export type SuggestPriceOutput = z.infer<typeof SuggestPriceOutputSchema>;

export async function suggestPrice(input: SuggestPriceInput): Promise<SuggestPriceOutput> {
  return suggestPriceFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestPricePrompt',
  input: {schema: SuggestPriceInputSchema},
  output: {schema: SuggestPriceOutputSchema},
  prompt: `You are an expert car pricing assistant. Given the details of a car and its location, you will suggest a fair market price for the car. You will also provide a brief explanation of your reasoning.

Car Details:
Make: {{{make}}}
Model: {{{model}}}
Year: {{{year}}}
Mileage: {{{mileage}}}
Condition: {{{condition}}}
Location (Zip Code): {{{zipCode}}}

Consider recent sales data, market trends, and the car's condition and mileage when determining the price.`,
});

const suggestPriceFlow = ai.defineFlow(
  {
    name: 'suggestPriceFlow',
    inputSchema: SuggestPriceInputSchema,
    outputSchema: SuggestPriceOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
